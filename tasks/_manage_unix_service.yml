- set_fact:
    __service_file: "{{service.directory|default('/Library/LaunchDaemons')}}/{{service.name}}.plist"
    __service_template: "service-osx.plist.j2"
  when: >
    ansible_os_family == "Darwin"

- set_fact:
    __service_file: "{{service.directory|default('/etc/systemd/system')}}/{{service.name}}.service"
    __service_template: "service-systemd.service.j2"
  when: >
    ansible_os_family != "Darwin"

- set_fact:
    __service_state: "{{service.state|default('restarted')}}"

- name: create service file
  template:
    src: "{{__service_template}}"
    dest: "{{__service_file}}"
    owner: root
    mode: 0644
  register: __service_status
  when: __service_state != 'absent'

- name: unregister service (Darwin)
  shell: "launchctl bootout system {{__service_file}}"
  changed_when: false
  ignore_errors: true
  when: >
    ansible_os_family == "Darwin" and
    __service_state == 'absent'

- name: unregister service (systemd)
  ansible.builtin.systemd:
    name: "{{service.name}}"
    state: stopped
    enabled: false
  ignore_errors: true
  when: >
    ansible_os_family != "Darwin" and
    __service_state == 'absent'

- name: remove service file
  file:
    state: absent
    path: "{{__service_file}}"
  when: >
    __service_state == 'absent'

# for newer ansible this should be done by the launchctl module
- name: unregister service
  shell: "launchctl bootout system {{__service_file}}"
  changed_when: false
  ignore_errors: true
  when: >
    ansible_os_family == "Darwin" and
    __service_state != 'absent' and
    (__service_status is defined and
    __service_status is changed)

- name: register service (Darwin)
  shell: "launchctl bootstrap system {{__service_file}}"
  changed_when: false
  when: >
    ansible_os_family == "Darwin" and
    __service_state != 'absent' and
    __service_status is defined and
    __service_status is changed

- name: register service (systemd)
  ansible.builtin.systemd:
    name: "{{service.name}}"
    state: "{{__service_state}}"
    enabled: true
    daemon-reload: true
  when: >
    ansible_os_family != "Darwin" and
    __service_state != 'absent' and
    __service_status is defined and
    __service_status is changed
