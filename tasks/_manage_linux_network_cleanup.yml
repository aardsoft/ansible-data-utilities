- name: locate netplan configuration files
  find:
    paths: /etc/netplan
    patterns: "*.yaml"
    recurse: no
    file_type: file
  register: __netplan_config_files
  when: >
    network_manager is defined and network_manager == "netplan"

- name: remove old netplan configuration files
  file:
    state: absent
    path: "{{ __file.path }}"
  loop_control:
    loop_var: __file
  with_items: "{{ __netplan_config_files.files|default({}) }}"
  when: >
    network_manager is defined and network_manager == "netplan" and
    __file.path|basename not in __netplan_cfg

- name: locate networkd link files
  find:
    paths: /etc/systemd/network
    patterns: "*.link"
    recurse: no
    file_type: file
  register: __networkd_link_files
  when: >
    network_manager is defined and network_manager == "networkd"

- name: locate networkd netdev files
  find:
    paths: /etc/systemd/network
    patterns: "*.netdev"
    recurse: no
    file_type: file
  register: __networkd_netdev_files
  when: >
    network_manager is defined and network_manager == "networkd"

- name: locate networkd network files
  find:
    paths: /etc/systemd/network
    patterns: "*.network"
    recurse: no
    file_type: file
  register: __networkd_network_files
  when: >
    network_manager is defined and network_manager == "networkd"

- name: remove old .link files
  file:
    state: absent
    path: "{{ __file.path }}"
  loop_control:
    loop_var: __file
  with_items: "{{ __networkd_link_files.files|default({}) }}"
  when: >
    network_manager is defined and network_manager == "networkd" and
    __file.path|basename not in __networkd_links

- name: remove old .netdev files
  file:
    state: absent
    path: "{{ __file.path }}"
  loop_control:
    loop_var: __file
  with_items: "{{ __networkd_netdev_files.files|default({}) }}"
  when: >
    network_manager is defined and network_manager == "networkd" and
    __file.path|basename not in __networkd_netdevs

- name: remove old .network files
  file:
    state: absent
    path: "{{ __file.path }}"
  loop_control:
    loop_var: __file
  with_items: "{{ __networkd_network_files.files|default({}) }}"
  when: >
    network_manager is defined and network_manager == "networkd" and
    __file.path|basename not in __networkd_networks

- name: locate old ifcfg files
  find:
    paths: /etc/sysconfig/network-scripts/
    patterns: "ifcfg-e*"
    recurse: no
    file_type: file
  register: find_result
  when: >
    network_manager is defined and network_manager == "networkd"

- name: remove old ifcfg files
  file:
    state: absent
    path: "{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when: >
    network_manager is defined and network_manager == "networkd"